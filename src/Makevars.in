
OTEL_CPP_LIBS =  \
	  install/lib/libopentelemetry_exporter_ostream_span.a \
	  install/lib/libopentelemetry_trace.a \
	  install/lib/libopentelemetry_resources.a \
	  install/lib/libopentelemetry_common.a

OBJECTS = init.o tracer-sdk.o tracer-api.o

PKG_CPPFLAGS = -Iinstall/include
PKG_LIBS = \
    -Linstall/lib -lopentelemetry_exporter_ostream_span \
    -lopentelemetry_trace -lopentelemetry_resources \
    -lopentelemetry_common

all: $(SHLIB) strip

# need static libs before linking
$(SHLIB): $(OTEL_CPP_LIBS)

# need to extract headers before compiling R package
$(OBJECTS): cpp/CMakeLists.txt

cpp/CMakeLists.txt: vendor/opentelemetry-cpp.tgz
	tar xzf vendor/opentelemetry-cpp.tgz --no-same-owner || \
	    tar xzf vendor/opentelemetry-cpp.tgz
	@mkdir -p cpp/.git
	(cd cpp; MAKEFLAGS= CC="$(CC)" CXX="$(CXX)" AR="$(AR)" \
     RANLIB="$(RANLIB)" CPPFLAGS="$(CPPFLAGS)" \
     CXXFLAGS="$(CXXFLAGS) $(CXXPICFLAGS)" \
	 CFLAGS="$(CFLAGS) $(CPICFLAGS)" cmake -S . -B build \
	-DCMAKE_INSTALL_PREFIX=../install \
	-DCMAKE_PREFIX_PATH="/opt/R/arm64;../cmake" \
	-DCMAKE_POSITION_INDEPENDENT_CODE=ON \
	-DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_STANDARD=@CXX_STANDARD@ \
	-DWITH_ELASTICSEARCH=OFF -DWITH_EXAMPLES=OFF \
	-DWITH_OTLP_GRPC=OFF -DWITH_OTLP_HTTP=ON -DWITH_ABSEIL=OFF \
	-DWITH_PROMETHEUS=OFF -DBUILD_TESTING=OFF -DWITH_BENCHMARK=OFF \
	-DWITH_FUNC_TESTS=OFF -DWITH_ETW=OFF)
	@rm -rf cpp/.git
	sed -i.bak -e 's/^M$$//' cpp/build/CMakeFiles/3.30.4/CompilerIdC/CMakeCCompilerId.c
	sed -i.bak -e 's/^M$$//' cpp/build/CMakeFiles/3.30.4/CompilerIdCXX/CMakeCXXCompilerId.cpp
	/usr/bin/find . -name Makefile | xargs sed -i.bak -e 's/^M$$//'
	(cd cpp; @CMAKE_BUILD_PARALLEL_LEVEL@ cmake --build build)
	(cd cpp; cmake --install build)
	@find . -type f  -name "*.pb.h" -exec sed -i.bak "s/#pragma/# pragma/g" {} \;

strip: $(SHLIB)
	@if which strip >/dev/null && which uname >/dev/null && test "`uname`" = "Linux" && test "$$_R_SHLIB_STRIP_" = "true" && test -n "$$R_STRIP_SHARED_LIB"; then \
		echo stripping $(SHLIB); \
		echo $$R_STRIP_SHARED_LIB $(SHLIB); \
		$$R_STRIP_SHARED_LIB $(SHLIB); \
	fi
